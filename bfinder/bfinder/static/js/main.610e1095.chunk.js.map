{"version":3,"sources":["Pistas.jsx","bombachas.js","Finder.jsx","App.js","serviceWorker.js","index.js"],"names":["caracteristicas","Pistas","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","tipo","valor","_this2","react_default","a","createElement","className","Select_default","onChange","e","onTipoChange","value","index_es","key","id","onCaracterisitcaChange","map","item","concat","_this3","setState","target","_this4","Component","bombachasData","nombre","Finder","find","pistas","length","Fragment","pistasPositivas","slice","filter","x","pistasNegativas","bombachas","filtradas","forEach","bombacha","every","pista","includes","push","caracteristicasRepetidas","c","caracteristica","name","sort","y","toFixed","App","add","newId","reduce","max","i","remove","handleChange","Pistas_Pistas","onClick","variant","icons_index_es","color","Finder_Finder","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.610e1095.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Select from '@material-ui/core/Select';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport './App.css';\r\n\r\nconst caracteristicas = [\r\n    '1 color', '2 colores', '2+ colores', 'Agujeritos', 'Azul', 'Beige', 'Blanca', 'Clara', 'Corazones', 'Dibujos',\r\n    'Encaje', 'Estrellas', 'Formas geométricas', 'Gris', 'Lisa', 'Lunares', 'Moñitos', 'Negra', 'Oscura', 'Palmeras', 'Piel',\r\n    'Plateada', 'Puntitos', 'Rayas', 'Rayitas', 'Roja', 'Rosa', 'Sin costuras', 'Super lisa', 'Transparencia', 'Amarilla',\r\n    'Verde', 'Puntilla', 'Ropa'\r\n];\r\n\r\nexport default class Pistas extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            tipo: 'positivo',\r\n            valor: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pista\">\r\n                <Select\r\n                    onChange={(e) => this.onTipoChange(e)}\r\n                    value={this.state.tipo}\r\n                    className=\"pista tipo\"\r\n                >\r\n                    <MenuItem key={this.props.id + 'positivo'} value='positivo'>Positivo</MenuItem>\r\n                    <MenuItem key={this.props.id + 'negativo'} value='negativo'>Negativo</MenuItem>\r\n                </Select>\r\n                <Select\r\n                    onChange={(e) => this.onCaracterisitcaChange(e)}\r\n                    value={this.props.value}\r\n                    className=\"pista caracteristica\"\r\n                >\r\n                    {caracteristicas.map(item => (<MenuItem key={`${this.props.id}${item}`} value={item}>{item}</MenuItem>))}\r\n                </Select>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onTipoChange(e) {\r\n        this.setState({ tipo: e.target.value }, () => this.props.onChange(this.props.id, this.state.valor, this.state.tipo));\r\n    }\r\n\r\n    onCaracterisitcaChange(e) {\r\n        this.setState({ valor: e.target.value }, () => this.props.onChange(this.props.id, this.state.valor, this.state.tipo));\r\n    }\r\n}\r\n","const bombachasData = [\r\n    { nombre: 'Gris lisa', caracteristicas: ['Clara', 'Lisa', '1 color', 'Gris'] },\r\n    { nombre: 'Beige lisa', caracteristicas: ['Clara', 'Lisa', '1 color', 'Beige'] },\r\n    { nombre: 'Gris con puntitos', caracteristicas: ['Clara', 'Lisa', '1 color', 'Puntitos', 'Gris'] },\r\n    { nombre: 'Color piel', caracteristicas: ['Lisa', 'Super lisa', '1 color', 'Piel', 'Clara'] },\r\n    { nombre: 'Negra mitad encaje mitad lisa', caracteristicas: ['Negra', 'Lisa', 'Encaje', '1 color', 'Moñitos', 'Rosa', 'Oscura'] },\r\n    { nombre: 'Roja con corazón de agujeritos', caracteristicas: ['Roja', 'Lisa', 'Agujeritos', '1 color', 'Corazones', 'Oscura', 'Dibujos'] },\r\n    { nombre: 'Roja con rayitas', caracteristicas: ['1 color', 'Lisa', 'Rayas', 'Rayitas', 'Roja', 'Oscura',] },\r\n    { nombre: 'Roja con rayas', caracteristicas: ['1 color', 'Lisa', 'Rayas', 'Roja', 'Oscura',] },\r\n    { nombre: 'Roja con corazones', caracteristicas: ['2 colores', 'Roja', 'Blanca', 'Dibujos', 'Corazones', 'Oscura',] },\r\n    { nombre: 'Roja con corazones dibujados', caracteristicas: ['2 colores', 'Roja', 'Blanca', 'Dibujos', 'Corazones', 'Oscura',] },\r\n    { nombre: 'Negra con rayas plateadas', caracteristicas: ['Negra', 'Plateada', 'Rayas', '2 colores', 'Oscura',] },\r\n    { nombre: 'Sin costuras', caracteristicas: ['Sin costuras', 'Oscura', 'Formas geométricas', '2+ colores',] },\r\n    { nombre: 'Roja con lunares', caracteristicas: ['2 colores', 'Roja', 'Blanca', 'Formas geométricas', 'Oscura', 'Lunares',] },\r\n    { nombre: 'Rosa con agujeritos', caracteristicas: ['Clara', 'Lisa', 'Rosa', 'Agujeritos', '1 color',] },\r\n    { nombre: 'Rosa con encaje', caracteristicas: ['Clara', 'Rosa', 'Encaje', 'Lisa', '1 color',] },\r\n    { nombre: 'Rosa con rayas horizontales', caracteristicas: ['2 colores', 'Rosa', 'Rayas',] },\r\n    { nombre: 'Negra con corazones rojos bordados', caracteristicas: ['Negra', 'Oscura', '2 colores', 'Transparencia', 'Roja', 'Corazones', 'Dibujos',] },\r\n    { nombre: 'Estrellas', caracteristicas: ['2 colores', 'Negra', 'Azul', 'Estrellas', 'Dibujos',] },\r\n    { nombre: 'Palmeras', caracteristicas: ['Clara', 'Negra', 'Palmeras', 'Dibujos', 'Beige',] },\r\n    { nombre: 'Limones', caracteristicas: ['Clara', '2+ colores', 'Blanca', 'Amarilla', 'Verde', 'Dibujos',] },\r\n    { nombre: 'Con corpiños y bombachas', caracteristicas: ['Blanca', '2+ colores', 'Dibujos', 'Rosa', 'Celeste', 'Corazones', 'Flores', 'Puntilla', 'Ropa'] },\r\n    { nombre: 'Roja con encaje nueva', caracteristicas: ['Roja', 'Encaje'] }\r\n];\r\n\r\nexport default bombachasData;\r\n","import React, { Component } from 'react'\r\nimport bombachasData from './bombachas'\r\nimport './App.css'\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default class Finder extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.find()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    find = () => {\r\n        if (this.props.pistas.length === 0)\r\n            return <></>;\r\n\r\n        const pistasPositivas = this.props.pistas.slice().filter(x => x.tipo === 'positivo').map(x => x.value).filter(x => x !== '');\r\n        const pistasNegativas = this.props.pistas.slice().filter(x => x.tipo === 'negativo').map(x => x.value).filter(x => x !== '');\r\n        const bombachas = bombachasData.slice();\r\n\r\n        let filtradas = [];\r\n        bombachas.forEach(bombacha => {\r\n            if (pistasPositivas.every(pista => bombacha.caracteristicas.includes(pista)) &&\r\n                pistasNegativas.every(pista => !bombacha.caracteristicas.includes(pista)))\r\n                filtradas.push(bombacha);\r\n        });\r\n\r\n        let caracteristicasRepetidas = [];\r\n        filtradas.forEach(bombacha => bombacha.caracteristicas.forEach(c => {\r\n            let caracteristica = caracteristicasRepetidas.find(x => x.name === c);\r\n            if (caracteristica) {\r\n                caracteristica.value++;\r\n            }\r\n            else {\r\n                caracteristicasRepetidas.push({ name: c, value: 1 });\r\n            }\r\n        }));\r\n        caracteristicasRepetidas = caracteristicasRepetidas.sort((x, y) => y.value - x.value);\r\n\r\n        return (\r\n            <>\r\n                <div className=\"bombachas\">\r\n                    Hay {filtradas.length} bombachas&nbsp;\r\n                    {filtradas.length > 0 && ((1 / filtradas.length).toFixed(2) + \"%\")}\r\n                    <ul>\r\n                        {filtradas.map(x => <li key={x.nombre}>{x.nombre}</li>)}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"resumen\">\r\n                    Por características:\r\n                    <ul>\r\n                        {caracteristicasRepetidas.map(x => (\r\n                            <li key={x.value + x.name}>{x.value} {x.name}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Pistas from './Pistas'\nimport Finder from './Finder'\nimport { Button } from '@material-ui/core';\nimport { Add, Remove } from '@material-ui/icons'\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            pistas: [{ id: 0, value: '' }]\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"pistas-container\">\n                    {this.state.pistas.map(x => (\n                        <Pistas key={x.id} onChange={this.handleChange} id={x.id} value={x.value} />\n                    ))}\n                </div>\n\n                <div className=\"buttons\">\n                    <Button\n                        onClick={this.remove}\n                        variant='outlined'\n                        className=\"button\"\n                    >\n                        <Remove />\n                    </Button>\n                    <Button\n                        onClick={this.add}\n                        color='primary'\n                        variant='outlined'\n                        className=\"button\"\n                    >\n                        <Add />\n                    </Button>\n                </div>\n                <div>\n                    <Finder pistas={this.state.pistas} />\n                </div>\n            </div>\n        );\n    }\n\n    add = () => {\n        let pistas = this.state.pistas.slice();\n        const newId = pistas.map(x => x.id).reduce((max, i) => max > i ? max : i, 0) + 1;\n        pistas.push({ id: newId, value: '' });\n        this.setState({ pistas: pistas });\n    }\n\n    remove = () => {\n        this.setState({ pistas: this.state.pistas.slice(0, this.state.pistas.length - 1) });\n    }\n\n    handleChange = (id, value, tipo) => {\n        const pistas = this.state.pistas.slice();\n        const pista = pistas.find(x => x.id === id);\n        pista.value = value;\n        pista.tipo = tipo;\n        this.setState({ pistas: pistas });\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}