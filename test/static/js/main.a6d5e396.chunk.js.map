{"version":3,"sources":["utils/settings.js","components/LedConfig.jsx","components/modes/DropMode.jsx","components/modes/CustomMode.jsx","components/LightConfig.jsx","components/Navigation.jsx","App.js","serviceWorker.js","index.js"],"names":["lightModes","drop","rainbow","custom","getLightSettings","light","a","async","settings","JSON","parse","localStorage","getItem","createFirstSettings","updateLightSettings","mode","params","setItem","stringify","id","i","length","useStyles","makeStyles","theme","container","display","alignItems","justifyContent","square","width","height","border","palette","grey","A100","textField","textTransform","isValidColor","color","test","LedConfig","props","classes","useState","value","initialValue","error","state","setState","Grid","spacing","item","className","style","backgroundColor","TextField","onChange","event","target","onBlur","autoComplete","margin","inputProps","maxLength","InputProps","startAdornment","InputAdornment","position","DropMode","CustomMode","initialValues","map","key","marginTop","modeSettings","LightConfig","lightId","useParams","label","React","useRef","setSettings","labelWidth","setLabelWidth","useEffect","current","offsetWidth","fetchedSettings","fetchSettings","handleChange","Container","FormControl","fullWidth","variant","InputLabel","shrink","ref","Select","labelId","MenuItem","menuButton","marginRight","title","flexGrow","textAlign","lights","Navigation","history","useHistory","drawerOpened","setDrawerOpened","undefined","currentLight","setCurrentLight","AppBar","Toolbar","IconButton","edge","onClick","Typography","Drawer","open","onClose","List","x","ListItem","button","push","ListItemText","primary","App","CssBaseline","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6d5e396.chunk.js","sourcesContent":["export const lightModes = {\r\n    drop: 'drop',\r\n    rainbow: 'rainbow',\r\n    custom: 'custom'\r\n}\r\n\r\nexport async function getLightSettings(light) {\r\n    // const response = await fetch(`/get/${light}`);\r\n    // const settings = await response.json();\r\n    const settings = JSON.parse(localStorage.getItem(light));\r\n    if (!settings) {\r\n        createFirstSettings();\r\n        return getLightSettings(light);\r\n    }\r\n    return settings;\r\n}\r\n\r\nexport async function updateLightSettings(light, mode, params) {\r\n    // fetch(`/update/${light}`, {\r\n    //     method: 'POST',\r\n    //     body: JSON.stringify({ mode, params })\r\n    // });\r\n    let settings = await getLightSettings(light);\r\n    settings.mode = mode;\r\n    settings.params = params;\r\n    localStorage.setItem(light, JSON.stringify(settings));\r\n}\r\n\r\nfunction createFirstSettings() {\r\n    const settings = [\r\n        { id: 1, mode: lightModes.drop, params: ['BDD35F', '58B7DE', '6430B2', '60F44B', 'D5C179', '1C71DB', '7219C0', '5ED48A'] },\r\n        { id: 2, mode: lightModes.custom, params: ['D380B2', '814959', '48B211', '978E68', '40DF6D', 'D9A049', 'DD04D7', '3CD11B'] },\r\n        { id: 3, mode: lightModes.rainbow, params: ['FB604D', 'E7630A', 'D21F1D', '0F0A6C', '3535FD', 'FE5713', 'DE4E71', 'F3B00D'] },\r\n        { id: 4, mode: lightModes.drop, params: ['DECC47', '21CE2B', '1B79F2', '2F170E', '1E57E0', '318A54', '20B4F3', '0849D8'] },\r\n        { id: 5, mode: lightModes.drop, params: ['02D935', 'D4E69D', '85B8A2', '87F548', '14E511', 'DECC87', 'B5C396', '763B1B'] },\r\n        { id: 6, mode: lightModes.drop, params: ['71A3A3', '9BFF68', '2948C4', '933644', '78EFCA', 'E88966', '22BA59', '6F3E39'] },\r\n        { id: 7, mode: lightModes.drop, params: ['BC92E1', '06CADD', 'BD99D0', '516896', '2D29D3', '41ECD5', 'F32742', '411147'] },\r\n        { id: 8, mode: lightModes.drop, params: ['910EAF', '5095DF', '56B94C', 'AC6782', 'AB5FD6', 'D2CFBB', 'E31F67', '79D9FF'] },\r\n        { id: 9, mode: lightModes.drop, params: ['FC66A4', '6E4133', '9AA06F', 'FBE378', 'F0F116', 'E40F78', '6C771F', 'ECB5D3'] },\r\n        { id: 10, mode: lightModes.drop, params: ['69914C', '256AD1', 'F049F1', '0121FE', 'B8B88D', 'DD82DB', '9A3D5B', '69876E'] },\r\n    ];\r\n\r\n    for (let i = 0; i < settings.length; i++) {\r\n        localStorage.setItem(settings[i].id, JSON.stringify(settings[i]));\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { makeStyles, TextField, InputAdornment, Grid } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between'\r\n    },\r\n    square: {\r\n        width: '80px',\r\n        height: '40px',\r\n        border: `3px solid ${theme.palette.grey.A100}`\r\n    },\r\n    textField: {\r\n        width: '100px',\r\n        textTransform: 'uppercase'\r\n    }\r\n}));\r\n\r\nconst isValidColor = color => /[0-9a-f]{6}/i.test(color);\r\n\r\nfunction LedConfig(props) {\r\n    const classes = useStyles();\r\n    const [state, setState] = useState({\r\n        value: props.initialValue,\r\n        error: false\r\n    });\r\n\r\n    const handleChange = event => {\r\n        const value = event.target.value;\r\n        setState({ ...state, value: value });\r\n        \r\n        if (isValidColor(value))\r\n            props.onChange(value);\r\n    }\r\n\r\n    const handleBlur = event => {\r\n        setState({\r\n            ...state,\r\n            error: !isValidColor(event.target.value)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            spacing={2}\r\n            alignItems=\"center\"\r\n        >\r\n            <Grid item>\r\n                <div className={classes.square} style={{ backgroundColor: `#${state.value}` }}>\r\n                </div>\r\n            </Grid>\r\n            <Grid item>\r\n                <TextField\r\n                    className={classes.textField}\r\n                    value={state.value}\r\n                    error={state.error}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    autoComplete=\"off\"\r\n                    margin=\"dense\"\r\n                    inputProps={{\r\n                        maxLength: 6,\r\n                        style: { textTransform: 'uppercase' }\r\n                    }}\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">#</InputAdornment>\r\n                    }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default LedConfig\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport LedConfig from '../LedConfig'\r\n\r\nfunction DropMode(props) {\r\n    const handleChange = value => {\r\n        props.onChange(value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <LedConfig\r\n                initialValue={props.initialValue}\r\n                onChange={handleChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nDropMode.propTypes = {\r\n    initialValue: PropTypes.string,\r\n    onChange: PropTypes.func\r\n}\r\n\r\nexport default DropMode\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport LedConfig from '../LedConfig'\r\n\r\nfunction CustomMode(props) {\r\n    return (\r\n        <div>\r\n            {props.initialValues.map(item => (\r\n                <LedConfig key={item} initialValue={item} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nCustomMode.propTypes = {\r\n    initialValues: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onChange: PropTypes.func\r\n}\r\n\r\nexport default CustomMode\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Container, makeStyles, Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\r\nimport { getLightSettings, lightModes, updateLightSettings } from '../utils/settings';\r\nimport DropMode from './modes/DropMode';\r\nimport CustomMode from './modes/CustomMode';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    modeSettings: {\r\n        marginTop: theme.spacing(2)\r\n    }\r\n}))\r\n\r\nfunction LightConfig(props) {\r\n    let { lightId } = useParams();\r\n    const classes = useStyles();\r\n    const label = React.useRef(null);\r\n    const [settings, setSettings] = useState({});\r\n    const [labelWidth, setLabelWidth] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setLabelWidth(label.current.offsetWidth);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function fetchSettings() {\r\n            const fetchedSettings = await getLightSettings(lightId);\r\n            setSettings(fetchedSettings);\r\n        }\r\n        fetchSettings();\r\n    }, [lightId]);\r\n\r\n    const handleModeChange = event => {\r\n        const mode = event.target.value;\r\n        setSettings({ ...settings, mode: mode });\r\n        updateLightSettings(lightId, mode, settings.params);\r\n    }\r\n\r\n    const handleChange = params => {\r\n        setSettings({ ...settings, params: params });\r\n        updateLightSettings(lightId, settings.mode, params);\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <FormControl\r\n                fullWidth\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n            >\r\n                <InputLabel shrink id=\"mode\" ref={label}>Modo</InputLabel>\r\n                <Select\r\n                    labelId=\"mode\"\r\n                    value={settings.mode || lightModes.drop}\r\n                    onChange={handleModeChange}\r\n                    labelWidth={labelWidth}\r\n                >\r\n                    <MenuItem value={lightModes.drop}>Gota</MenuItem>\r\n                    <MenuItem value={lightModes.rainbow}>Arcoiris</MenuItem>\r\n                    <MenuItem value={lightModes.custom}>Personalizado</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <div className={classes.modeSettings}>\r\n                {settings.mode === lightModes.drop &&\r\n                    <DropMode onChange={handleChange} initialValue={settings.params[0]} />\r\n                }\r\n                {settings.mode === lightModes.custom &&\r\n                    <CustomMode onChange={handleChange} initialValues={settings.params} />\r\n                }\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nLightConfig.propTypes = {\r\n\r\n}\r\n\r\nexport default LightConfig\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { AppBar, Toolbar, IconButton, Drawer, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        textAlign: 'left'\r\n    }\r\n}));\r\n\r\nconst lights = [\r\n    { title: 'Luz 1', id: 1 },\r\n    { title: 'Luz 2', id: 2 },\r\n    { title: 'Luz 3', id: 3 },\r\n    { title: 'Luz 4', id: 4 },\r\n    { title: 'Luz 5', id: 5 },\r\n    { title: 'Luz 6', id: 6 },\r\n    { title: 'Luz 7', id: 7 },\r\n    { title: 'Luz 8', id: 8 },\r\n    { title: 'Luz 9', id: 9 },\r\n    { title: 'Luz 10', id: 10 }\r\n];\r\n\r\nfunction Navigation(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const [drawerOpened, setDrawerOpened] = useState(false);\r\n    const [currentLight, setCurrentLight] = useState(undefined);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setDrawerOpened(true);\r\n    }\r\n\r\n    const handleDrawerClose = () => setDrawerOpened(false);\r\n\r\n    const handleListItemClick = id => () => {\r\n        setDrawerOpened(false);\r\n        setCurrentLight(id);\r\n        history.push(`/light/${id}`);\r\n    }\r\n\r\n    const getTitle = () => {\r\n        if (currentLight !== undefined)\r\n            return lights[currentLight - 1].title;\r\n        return \"Xmas Lights\"\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {getTitle()}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                open={drawerOpened}\r\n                onClose={handleDrawerClose}\r\n            >\r\n                <List>\r\n                    {lights.map(x => (\r\n                        <ListItem button key={x.title} onClick={handleListItemClick(x.id)}>\r\n                            <ListItemText primary={x.title} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport LightConfig from './components/LightConfig';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport Navigation from './components/Navigation';\r\n\r\n// const theme = createMuiTheme({\r\n//     palette: {\r\n//         type: 'dark',\r\n//         primary: { main: lightGreen[300] },\r\n//         secondary: { main: indigo.A100 },\r\n//         background: { default: blueGrey[900] },\r\n//     },\r\n//     typography: {\r\n//         useNextVariants: true,\r\n//         allVariants: { color: 'white' }\r\n//     }\r\n// });\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <CssBaseline />\r\n            <HashRouter>\r\n                <Navigation />\r\n                <Switch>\r\n                    <Route exact path=\"/light/:lightId\" component={LightConfig} />\r\n                </Switch>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}