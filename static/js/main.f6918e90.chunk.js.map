{"version":3,"sources":["components/Intro.jsx","questionList.js","components/Question.jsx","components/KeyCounter.jsx","components/Chest.jsx","components/QuestionsContainer.jsx","components/AnswersContainer.jsx","components/Finish.jsx","App.js","serviceWorker.js","index.js"],"names":["Intro","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","localStorage","clear","react_default","a","createElement","index_es","variant","paragraph","Link","to","color","Component","withRouter","questionList","question","answer","hasMap","Question","handleChange","e","target","value","setState","answerValue","checkQuestion","includes","toLowerCase","onCorrectAnswer","handleIconClick","event","anchorElement","handleClose","state","classes","className","highlight","icons_index_es","icon","onClick","id","open","Boolean","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","popoverTypography","Fragment","textField","onChange","label","withStyles","theme","palette","primary","main","width","marginTop","spacing","unit","padding","KeyCounter","VpnKey_default","text","keys","totalKeys","marginLeft","Chest","onChestClick","chestAnimation","onChestAnimationEnd","progress","chestZoomOut","_this2","setTimeout","_this3","arrowBack","src","alt","concat","chest","chestOpenAnimation","onAnimationEnd","progressContainer","components_KeyCounter","keyCounter","showChest","textAlign","marginBottom","cursor","maxHeight","margin","backgroundColor","blueGrey","display","alignItems","justifyContent","keyIcon","height","QuestionsContainer","handleCorrectAnswer","newQuestionNumber","parseInt","questionNumber","length","setItem","getItem","components_Question","direction","in","mountOnEnter","unmountOnExit","slideContainer","components_Chest","left","top","position","background","default","AnswersContainer","Finish","createMuiTheme","type","lightGreen","secondary","indigo","A100","typography","useNextVariants","allVariants","App","core_styles","HashRouter","Switch","Route","exact","path","component","render","components_QuestionsContainer","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6918e90.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport { withRouter } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Intro extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        localStorage.clear();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography variant='body1' paragraph>\r\n                    ¡Bienvenida a la búsqueda del tesoro!\r\n                </Typography>\r\n                <Typography variant='body1' paragraph>\r\n                    A partir de las pistas, vas a tener que ir escribiendo las respuestas para poder avanzar y encontrar el tesoro.\r\n                </Typography>\r\n                <Typography variant='body1' paragraph>\r\n                    Tené en cuenta una cosa: la búsqueda del tesoro es una búsqueda posta,\r\n                    así que vas a tener que salir a caminar para encontrar las respuestas.\r\n                </Typography>\r\n                <Typography variant='body1' paragraph>\r\n                    Suerte y espero que encuentres el tesoro. :)</Typography>\r\n                <Typography variant='body2' paragraph>\r\n                    Podés pedirme pistas por WhatsApp ;)\r\n                </Typography>\r\n\r\n                <Link to='/questions'>\r\n                    <Button color='primary' variant='contained'>\r\n                        Comenzar la búsqueda\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Intro);\r\n","const questionList = [\r\n    {\r\n        question: 'Tu novio es un...',\r\n        answer: ['robotito'],\r\n        hasMap: false\r\n    },\r\n    {\r\n        question: 'Acá me enseñaste a tomar mate',\r\n        answer: ['mate tibio'],\r\n        hasMap: true\r\n    },\r\n    {\r\n        question: 'En este lugar nos dijimos que íbamos a buscar las fotos de cuando terminé el colegio para ver si nos veíamos',\r\n        answer: ['pamplemousse'],\r\n        hasMap: true\r\n    },\r\n    {\r\n        question: 'Lo había visto varias veces y me daba curiosidad, así que decidí llevarte acá en nuestra primera cita',\r\n        answer: ['kilkenny', 'the kilkenny', 'kilkeny', 'the kilkeny'],\r\n        hasMap: false\r\n    },\r\n    {\r\n        question: 'Acá tenemos nuestra primera foto juntos',\r\n        answer: ['galeria guemes', 'galería güemes', 'galeria güemes', 'galería guemes'],\r\n        hasMap: false\r\n    },\r\n    {\r\n        question: 'La película que me olvidé que vimos juntos 🙈',\r\n        answer: ['pantera negra', 'black panther'],\r\n        hasMap: false\r\n    },\r\n    {\r\n        question: 'A pesar de ser de Ramos, nunca había ido a este lugar',\r\n        answer: ['maru es el amor de mi vida'],\r\n        hasMap: true\r\n    },\r\n    {\r\n        question: 'La ciudad en la que tuvimos nuestro primer picnic',\r\n        answer: ['tandil'],\r\n        hasMap: false\r\n    },\r\n    {\r\n        question: 'Nuestra primera sala de escape solos',\r\n        answer: ['listo para escapar'],\r\n        hasMap: true\r\n    },\r\n    {\r\n        question: 'El día que te dije \"¿Vamos a un lugar más tranquilo?\" fuimos a ver esto',\r\n        answer: ['coco'],\r\n        hasMap: false\r\n    },\r\n    {\r\n        question: 'Estuvimos tres años acá, re cerca. Siempre me voy a preguntar si alguna vez nos habremos mirado.',\r\n        answer: ['myf'],\r\n        hasMap: true\r\n    },\r\n];\r\n\r\nexport default questionList;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Typography, TextField, withStyles, Popover } from '@material-ui/core';\r\nimport { Map, EventSeat } from '@material-ui/icons';\r\n\r\nconst styles = theme => {\r\n    return {\r\n        highlight: {\r\n            color: theme.palette.primary.main\r\n        },\r\n        textField: {\r\n            width: '75%',\r\n            marginTop: theme.spacing.unit\r\n        },\r\n        popoverTypography: {\r\n            padding: theme.spacing.unit * 2\r\n        }\r\n    }\r\n}\r\n\r\nclass Question extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            answerValue: '',\r\n            anchorElement: null\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const answer = e.target.value;\r\n        this.setState({ answerValue: answer });\r\n        this.checkQuestion(answer);\r\n    }\r\n\r\n    checkQuestion = (answer) => {\r\n        if (this.props.question.answer.includes(answer.toLowerCase())) {\r\n            this.setState({ answerValue: '' });\r\n            this.props.onCorrectAnswer();\r\n        }\r\n    }\r\n\r\n    handleIconClick = (event) => {\r\n        this.setState({ anchorElement: event.target });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorElement: null });\r\n    }\r\n\r\n    render() {\r\n        const question = this.props.question;\r\n\r\n        if (!question)\r\n            return (\r\n                <div>\r\n                    <Typography variant='h6' paragraph>\r\n                        ¡Felicitaciones!<br />Completaste la búsqueda de todas las llaves\r\n                    </Typography>\r\n                    <Typography variant='h6' paragraph>\r\n                        ¡Tocá la llave de arriba a la izquierda para abrir el cofre y encontrar el premio!\r\n                    </Typography>\r\n                </div>\r\n            );\r\n\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Typography variant='h6' className={classes.highlight}>\r\n                    {question.hasMap && <Map className={classes.icon} onClick={this.handleIconClick} />}\r\n                    {!question.hasMap && <EventSeat className={classes.icon} onClick={this.handleIconClick} />}\r\n                </Typography>\r\n                <Popover\r\n                    id=\"icon-popover\"\r\n                    open={Boolean(this.state.anchorElement)}\r\n                    anchorEl={this.state.anchorElement}\r\n                    onClose={this.handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'center',\r\n                    }}\r\n                >\r\n                    <Typography className={classes.popoverTypography}>\r\n                        {question.hasMap && <>La respuesta está en el lugar que dice la pista</>}\r\n                        {!question.hasMap && <>La respuesta la podés poner sin moverte de donde estás</>}\r\n                    </Typography>\r\n                </Popover>\r\n                <Typography variant='h6'>\r\n                    {question.question}\r\n                </Typography>\r\n                <TextField\r\n                    className={classes.textField}\r\n                    onChange={this.handleChange}\r\n                    value={this.state.answerValue}\r\n                    label='Respuesta' />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nQuestion.propTypes = {\r\n    question: PropTypes.object,\r\n    onCorrectAnswer: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Question);\r\n","import React, { Component } from 'react'\r\nimport VpnKey from '@material-ui/icons/VpnKey'\r\nimport { Button, withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst styles = theme => {\r\n    return {\r\n        text: {\r\n            marginLeft: theme.spacing.unit\r\n        }\r\n    };\r\n}\r\n\r\nclass KeyCounter extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={this.props.className}>\r\n                <Button onClick={this.props.onClick}>\r\n                    <VpnKey />\r\n                    <span className={classes.text}>\r\n                        {this.props.keys} / {this.props.totalKeys}\r\n                    </span>\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nKeyCounter.propTypes = {\r\n    keys: PropTypes.number.isRequired,\r\n    totalKeys: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(KeyCounter);","import React, { Component } from 'react'\r\nimport { LinearProgress, withStyles } from '@material-ui/core';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport './chestAnimation.css'\r\nimport KeyCounter from './KeyCounter';\r\nimport { blueGrey } from '@material-ui/core/colors';\r\n\r\nconst styles = theme => {\r\n    return {\r\n        arrowBack: {\r\n            textAlign: 'left',\r\n            marginBottom: theme.spacing.unit * 2,\r\n            cursor: 'pointer',\r\n            color: 'white',\r\n            marginTop: '5px'\r\n        },\r\n        chest: {\r\n            width: 'auto',\r\n            maxHeight: '300px',\r\n        },\r\n        progressContainer: {\r\n            width: '75%',\r\n            margin: `${theme.spacing.unit * 3}px auto ${theme.spacing.unit}px auto`\r\n        },\r\n        progress: {\r\n            backgroundColor: blueGrey[700],\r\n        },\r\n        keys: {\r\n            display: 'inline-flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        keyIcon: {\r\n            color: 'white',\r\n            height: '20px'\r\n        },\r\n        text: {\r\n            width: '75%',\r\n            textAlign: 'center',\r\n            margin: `${theme.spacing.unit * 2}px auto 0px`\r\n        }\r\n    }\r\n}\r\n\r\nclass Chest extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            progress: 0,\r\n            chestAnimation: '',\r\n            chestZoomOut: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.setState({ progress: this.props.keys * 100 / this.props.totalKeys });\r\n        }, 100);\r\n    }\r\n\r\n    onChestClick = () => {\r\n        if (this.props.keys === this.props.totalKeys) {\r\n\r\n        }\r\n        else {\r\n            this.setState({ chestAnimation: 'chestAnimation' });\r\n        }\r\n    }\r\n\r\n    onChestAnimationEnd = () => {\r\n        this.setState({ chestAnimation: '' });\r\n    }\r\n\r\n    render() {\r\n        let { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <div className={classes.arrowBack}>\r\n                    <ArrowBack onClick={this.props.onClose} />\r\n                </div>\r\n                <img\r\n                    src='chest.png' alt='Cofre del tesoro'\r\n                    className={`${classes.chest} ${this.state.chestAnimation} ${this.state.chestOpenAnimation}`}\r\n                    onClick={this.onChestClick}\r\n                    onAnimationEnd={this.onChestAnimationEnd} />\r\n\r\n                {/* <Typography variant='body1' paragraph className={classes.text}>\r\n                    Este el es cofre del tesoro<br />Para abrirlo necesitás {this.props.totalKeys} llaves&nbsp;\r\n                    {this.props.keys === this.props.totalKeys && <>¡y ya las tenés todas! ¡Tocá el cofre para abrirlo!</>}\r\n                    {(this.props.keys < this.props.totalKeys && this.props.keys !== 0) && <>pero solo tenés {this.props.keys}<br />Seguí contestando preguntas para avanzar :)</>}\r\n                    {this.props.keys === 0 && <>pero no tenés ninguna<br />Empezá a contestar preguntas para conseguirlas</>}\r\n                </Typography> */}\r\n                \r\n                <div className={classes.progressContainer}>\r\n                    <LinearProgress\r\n                        className={classes.progress}\r\n                        variant='determinate'\r\n                        value={this.state.progress} />\r\n                </div>\r\n                <KeyCounter\r\n                    className={this.props.classes.keyCounter}\r\n                    keys={this.props.keys}\r\n                    totalKeys={this.props.totalKeys}\r\n                    onClick={() => this.setState({ showChest: true })} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Chest);\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport questionList from '../questionList';\r\nimport Question from './Question';\r\nimport KeyCounter from './KeyCounter';\r\nimport { withStyles, Slide } from '@material-ui/core';\r\nimport Chest from './Chest'\r\n\r\nconst styles = theme => {\r\n    return {\r\n        keyCounter: {\r\n            textAlign: 'left',\r\n            marginBottom: theme.spacing.unit * 2\r\n        },\r\n        slideContainer: {\r\n            left: '0px',\r\n            top: '0px',\r\n            position: 'absolute',\r\n            padding: '16px',\r\n            width: '100%',\r\n            backgroundColor: theme.palette.background.default\r\n        }\r\n    }\r\n}\r\n\r\nclass QuestionsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let questionNumber = parseInt(localStorage.getItem('questionNumber'));\r\n        if (!questionNumber) {\r\n            questionNumber = 0;\r\n            localStorage.setItem('questionNumber', questionNumber);\r\n        }\r\n\r\n        this.state = {\r\n            questionNumber: questionNumber\r\n        };\r\n    }\r\n\r\n    handleCorrectAnswer = () => {\r\n        let newQuestionNumber = parseInt(this.state.questionNumber) + 1;\r\n\r\n        if (newQuestionNumber === questionList.length) {\r\n            this.setState({ showChest: true });\r\n        }\r\n\r\n        localStorage.setItem('questionNumber', newQuestionNumber);\r\n        this.setState({ questionNumber: newQuestionNumber });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <KeyCounter\r\n                    className={this.props.classes.keyCounter}\r\n                    keys={this.state.questionNumber}\r\n                    totalKeys={questionList.length}\r\n                    onClick={() => this.setState({ showChest: true })} />\r\n                <Question\r\n                    question={questionList[this.state.questionNumber]}\r\n                    onCorrectAnswer={this.handleCorrectAnswer} />\r\n\r\n                <Slide direction='up' in={this.state.showChest} mountOnEnter unmountOnExit>\r\n                    <div className={this.props.classes.slideContainer}>\r\n                        <Chest\r\n                            keys={this.state.questionNumber}\r\n                            totalKeys={questionList.length}\r\n                            onClose={() => this.setState({ showChest: false })} />\r\n                    </div>\r\n                </Slide>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nQuestionsContainer.propTypes = {\r\n    onCorrectAnswer: PropTypes.func\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(QuestionsContainer));\r\n","import React, { Component } from 'react'\r\n\r\nexport default class AnswersContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        answers\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Typography, Button } from '@material-ui/core';\r\n\r\nexport default class Finish extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography variant='h3'>¡GANASTE!</Typography>\r\n        <Button color='primary'>Ver ubicación del tesoro</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport { MuiThemeProvider, createMuiTheme, CssBaseline } from '@material-ui/core';\r\nimport { green, indigo, blueGrey, grey, lightGreen } from '@material-ui/core/colors';\r\nimport { Switch, Route } from 'react-router'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Intro from './components/Intro';\r\nimport QuestionsContainer from './components/QuestionsContainer';\r\nimport AnswersContainer from './components/AnswersContainer';\r\nimport Finish from './components/Finish';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n        primary: { main: lightGreen[300] },\r\n        secondary: { main: indigo.A100 },\r\n        background: { default: blueGrey[900] },\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n        allVariants: { color: 'white' }\r\n    }\r\n});\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <CssBaseline />\r\n                <div className=\"App\">\r\n                    <HashRouter>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Intro} />\r\n                            <Route exact path=\"/questions\" render={() => {\r\n                                return <QuestionsContainer\r\n                                    onCorrectAnswer={this.handleCorrectAnswer} />\r\n                            }} />\r\n                            <Route exact path=\"/answers\" component={AnswersContainer} />\r\n                            <Route exact path=\"/finish\" component={Finish} />\r\n                        </Switch>\r\n                    </HashRouter>\r\n                </div>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}