{"version":3,"sources":["components/Intro.jsx","questionList.js","components/Question.jsx","components/KeyCounter.jsx","components/Chest.jsx","components/QuestionsContainer.jsx","components/AnswersContainer.jsx","components/Finish.jsx","App.js","serviceWorker.js","index.js"],"names":["Intro","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","localStorage","clear","react_default","a","createElement","index_es","variant","paragraph","Link","to","color","Component","withRouter","questionList","question","answer","hasMap","Question","handleChange","e","target","value","setState","answerValue","checkQuestion","includes","toLowerCase","onCorrectAnswer","state","className","classes","highlight","icons_index_es","textField","onChange","label","withStyles","theme","palette","primary","main","width","marginTop","spacing","unit","KeyCounter","onClick","VpnKey_default","text","keys","totalKeys","marginLeft","Chest","onChestClick","chestAnimation","onChestAnimationEnd","progress","chestZoomOut","_this2","setTimeout","arrowBack","onClose","src","alt","concat","chest","chestOpenAnimation","onAnimationEnd","Fragment","textAlign","marginBottom","cursor","chestContainer","display","backgroundColor","maxHeight","progressContainer","margin","blueGrey","alignItems","justifyContent","keyIcon","height","QuestionsContainer","handleCorrectAnswer","newQuestionNumber","parseInt","questionNumber","length","showChest","setItem","getItem","components_KeyCounter","keyCounter","components_Question","direction","in","mountOnEnter","unmountOnExit","slideContainer","components_Chest","left","top","position","padding","background","default","AnswersContainer","Finish","createMuiTheme","type","lightGreen","secondary","indigo","A100","typography","useNextVariants","allVariants","App","core_styles","HashRouter","Switch","Route","exact","path","component","render","components_QuestionsContainer","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yXAKMA,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,IACNQ,aAAaC,QAFER,wEAMf,OACIS,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,WAAS,GAArC,+CAGAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,WAAS,GAArC,mHAGAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,WAAS,GAArC,6JAIAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,WAAS,GAArC,gDAEAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,WAAS,GAArC,2CAIAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,cACLP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQK,MAAM,UAAUJ,QAAQ,aAAhC,oCA1BAK,aAmCLC,cAAWrB,aCFXsB,EAtCM,CACjB,CACIC,SAAU,IACVC,OAAQ,CAAC,IAAK,WACdC,QAAQ,GAEZ,CACIF,SAAU,IACVC,OAAQ,CAAC,KACTC,QAAQ,YCQVC,cACF,SAAAA,EAAYzB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqB,IACfxB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuB,GAAAlB,KAAAH,KAAMJ,KAOV0B,aAAe,SAACC,GACZ,IAAIJ,EAASI,EAAEC,OAAOC,MACtB5B,EAAK6B,SAAS,CAAEC,YAAaR,IAC7BtB,EAAK+B,cAAcT,IAXJtB,EAcnB+B,cAAgB,SAACT,GACTtB,EAAKD,MAAMsB,SAASC,OAAOU,SAASV,EAAOW,iBAC3CjC,EAAK6B,SAAS,CAAEC,YAAa,KAC7B9B,EAAKD,MAAMmC,oBAdflC,EAAKmC,MAAQ,CACTL,YAAa,IAJF9B,wEAsBf,IAAIqB,EAAWlB,KAAKJ,MAAMsB,SAE1B,OAAKA,EAaDZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKuB,UAAWjC,KAAKJ,MAAMsC,QAAQC,WAClDjB,EAASE,QAAUd,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,OAClBlB,EAASE,QAAUd,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,OAEzB9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,QAAQ,MACfQ,EAASA,UAEdZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIwB,UAAWjC,KAAKJ,MAAMsC,QAAQG,UAC9BC,SAAUtC,KAAKsB,aACfG,MAAOzB,KAAKgC,MAAML,YAClBY,MAAM,eAvBVjC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,WAAS,GAAlC,sBACoBL,EAAAC,EAAAC,cAAA,WADpB,kDAGAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,WAAS,GAAlC,oGA/BGI,aA6DRyB,uBAzEA,SAAAC,GACX,MAAO,CACHN,UAAW,CACPrB,MAAO2B,EAAMC,QAAQC,QAAQC,MAEjCP,UAAW,CACPQ,MAAO,MACPC,UAAWL,EAAMM,QAAQC,QAkEtBR,CAAmBnB,oBCjE5B4B,mLACO,IACGf,EAAYlC,KAAKJ,MAAjBsC,QACR,OACI5B,EAAAC,EAAAC,cAAA,OAAKyB,UAAWjC,KAAKJ,MAAMqC,WACvB3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQyC,QAASlD,KAAKJ,MAAMsD,SACxB5C,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,MACAD,EAAAC,EAAAC,cAAA,QAAMyB,UAAWC,EAAQkB,MACpBpD,KAAKJ,MAAMyD,KADhB,MACyBrD,KAAKJ,MAAM0D,oBAR/BvC,aAsBVyB,uBA9BA,SAAAC,GACX,MAAO,CACHW,KAAM,CACFG,WAAYd,EAAMM,QAAQC,QA2BvBR,CAAmBS,GCiB5BO,uBACF,SAAAA,EAAY5D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwD,IACf3D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0D,GAAArD,KAAAH,KAAMJ,KAcV6D,aAAe,WACP5D,EAAKD,MAAMyD,OAASxD,EAAKD,MAAM0D,WAI/BzD,EAAK6B,SAAS,CAAEgC,eAAgB,oBApBrB7D,EAwBnB8D,oBAAsB,WAClB9D,EAAK6B,SAAS,CAAEgC,eAAgB,MAvBhC7D,EAAKmC,MAAQ,CACT4B,SAAU,EACVF,eAAgB,GAChBG,cAAc,GALHhE,mFASC,IAAAiE,EAAA9D,KAChB+D,WAAW,WACPD,EAAKpC,SAAS,CAAEkC,SAA4B,IAAlBE,EAAKlE,MAAMyD,KAAaS,EAAKlE,MAAM0D,aAC9D,sCAgBE,IACCpB,EAAYlC,KAAKJ,MAAjBsC,QACN,OACI5B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKyB,UAAWC,EAAQ8B,WACpB1D,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAWc,QAASlD,KAAKJ,MAAMqE,WAEnC3D,EAAAC,EAAAC,cAAA,OACI0D,IAAI,YAAYC,IAAI,mBACpBlC,UAAS,GAAAmC,OAAKlC,EAAQmC,MAAb,KAAAD,OAAsBpE,KAAKgC,MAAM0B,eAAjC,KAAAU,OAAmDpE,KAAKgC,MAAMsC,oBACvEpB,QAASlD,KAAKyD,aACdc,eAAgBvE,KAAK2D,sBAEzBrD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,WAAS,EAACsB,UAAWC,EAAQkB,MAAzD,8BAC+B9C,EAAAC,EAAAC,cAAA,WAD/B,6BAC6DR,KAAKJ,MAAM0D,UADxE,cAEKtD,KAAKJ,MAAMyD,OAASrD,KAAKJ,MAAM0D,WAAahD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiE,SAAA,wEAC3CxE,KAAKJ,MAAMyD,KAAOrD,KAAKJ,MAAM0D,WAAiC,IAApBtD,KAAKJ,MAAMyD,MAAe/C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiE,SAAA,2BAAmBxE,KAAKJ,MAAMyD,KAAK/C,EAAAC,EAAAC,cAAA,WAAnC,kDACjD,IAApBR,KAAKJ,MAAMyD,MAAc/C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiE,SAAA,gCAAuBlE,EAAAC,EAAAC,cAAA,WAAvB,+DA9C1BO,cAgELyB,uBA5GA,SAAAC,GACX,MAAO,CACHuB,UAAW,CACPS,UAAW,OACXC,aAAmC,EAArBjC,EAAMM,QAAQC,KAC5B2B,OAAQ,UACR7D,MAAO,QACPgC,UAAW,OAEf8B,eAAgB,CACZC,QAAS,cACThC,MAAO,MACP6B,aAAmC,EAArBjC,EAAMM,QAAQC,KAC5ByB,UAAW,SACXK,gBAAiB,OAErBT,MAAO,CACHxB,MAAO,OACPkC,UAAW,SAEfC,kBAAmB,CACfnC,MAAO,MACPoC,OAAM,YAAAb,OAAc3B,EAAMM,QAAQC,KAA5B,YAEVY,SAAU,CACNkB,gBAAiBI,WAAS,MAE9B7B,KAAM,CACFwB,QAAS,cACTM,WAAY,SACZC,eAAgB,UAEpBC,QAAS,CACLvE,MAAO,QACPwE,OAAQ,QAEZlC,KAAM,CACFP,MAAO,MACP4B,UAAW,SACXQ,OAAQ,UAqELzC,CAAmBgB,GC1F5B+B,cACF,SAAAA,EAAY3F,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuF,IACf1F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyF,GAAApF,KAAAH,KAAMJ,KAaV4F,oBAAsB,WAClB,IAAIC,EAAoBC,SAAS7F,EAAKmC,MAAM2D,gBAAkB,EAE1DF,IAAsBxE,EAAa2E,QACnC/F,EAAK6B,SAAS,CAAEmE,WAAW,IAG/BzF,aAAa0F,QAAQ,iBAAkBL,GACvC5F,EAAK6B,SAAS,CAAEiE,eAAgBF,KAnBhC,IAAIE,EAAiBD,SAAStF,aAAa2F,QAAQ,mBAHpC,OAIVJ,IACDA,EAAiB,EACjBvF,aAAa0F,QAAQ,iBAAkBH,IAG3C9F,EAAKmC,MAAQ,CACT2D,eAAgBA,GAVL9F,wEAyBV,IAAAiE,EAAA9D,KACL,OACIM,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwF,EAAD,CACI/D,UAAWjC,KAAKJ,MAAMsC,QAAQ+D,WAC9B5C,KAAMrD,KAAKgC,MAAM2D,eACjBrC,UAAWrC,EAAa2E,OACxB1C,QAAS,kBAAMY,EAAKpC,SAAS,CAAEmE,WAAW,OAC9CvF,EAAAC,EAAAC,cAAC0F,EAAD,CACIhF,SAAUD,EAAajB,KAAKgC,MAAM2D,gBAClC5D,gBAAiB/B,KAAKwF,sBAE1BlF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO0F,UAAU,KAAKC,GAAIpG,KAAKgC,MAAM6D,UAAWQ,cAAY,EAACC,eAAa,GACtEhG,EAAAC,EAAAC,cAAA,OAAKyB,UAAWjC,KAAKJ,MAAMsC,QAAQqE,gBAC/BjG,EAAAC,EAAAC,cAACgG,EAAD,CACInD,KAAMrD,KAAKgC,MAAM2D,eACjBrC,UAAWrC,EAAa2E,OACxB3B,QAAS,kBAAMH,EAAKpC,SAAS,CAAEmE,WAAW,iBA3CrC9E,aAuDlByB,uBAxEA,SAAAC,GACX,MAAO,CACHwD,WAAY,CACRxB,UAAW,OACXC,aAAmC,EAArBjC,EAAMM,QAAQC,MAEhCuD,eAAgB,CACZE,KAAM,MACNC,IAAK,MACLC,SAAU,WACVC,QAAS,OACT/D,MAAO,OACPiC,gBAAiBrC,EAAMC,QAAQmE,WAAWC,WA4DvCtE,CAAmBxB,YAAWuE,IC/ExBwB,mLAEjB,OACEzG,EAAAC,EAAAC,cAAA,6BAHwCO,aCCzBiG,mLAEjB,OACE1G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,gBACAJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQK,MAAM,WAAd,uCAL4BC,aCQ9B0B,EAAQwE,yBAAe,CACzBvE,QAAS,CACLwE,KAAM,OACNvE,QAAS,CAAEC,KAAMuE,aAAW,MAC5BC,UAAW,CAAExE,KAAMyE,SAAOC,MAC1BT,WAAY,CAAEC,QAAS5B,WAAS,OAEpCqC,WAAY,CACRC,iBAAiB,EACjBC,YAAa,CAAE3G,MAAO,YAIT4G,mLACR,IAAA7H,EAAAG,KACL,OACIM,EAAAC,EAAAC,cAACmH,EAAA,iBAAD,CAAkBlF,MAAOA,GACrBnC,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,OACX3B,EAAAC,EAAAC,cAACoH,EAAA,EAAD,KACItH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,KACIvH,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtI,IACjCW,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAaE,OAAQ,WACnC,OAAO5H,EAAAC,EAAAC,cAAC2H,EAAD,CACHpG,gBAAiBlC,EAAK2F,yBAE9BlF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWlB,IACxCzG,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWjB,eAdlCjG,aCZbqH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASP,OAAO5H,EAAAC,EAAAC,cAACkI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a913b3cb.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport { withRouter } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Intro extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        localStorage.clear();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography variant='body1' paragraph>\r\n                    ¡Bienvenida a la búsqueda del tesoro!\r\n                </Typography>\r\n                <Typography variant='body1' paragraph>\r\n                    A partir de las pistas, vas a tener que ir escribiendo las respuestas para poder avanzar y encontrar el tesoro.\r\n                </Typography>\r\n                <Typography variant='body1' paragraph>\r\n                    Tené en cuenta una cosa: la búsqueda del tesoro es una búsqueda posta,\r\n                    así que vas a tener que salir a caminar para encontrar las respuestas.\r\n                </Typography>\r\n                <Typography variant='body1' paragraph>\r\n                    Suerte y espero que encuentres el tesoro. :)</Typography>\r\n                <Typography variant='body2' paragraph>\r\n                    Podés pedirme pistas por WhatsApp ;)\r\n                </Typography>\r\n\r\n                <Link to='/questions'>\r\n                    <Button color='primary' variant='contained'>\r\n                        Comenzar la búsqueda\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Intro);\r\n","const questionList = [\r\n    {\r\n        question: '1',\r\n        answer: ['1', 'tortuga'],\r\n        hasMap: false\r\n    },\r\n    {\r\n        question: '2',\r\n        answer: ['2'],\r\n        hasMap: true\r\n    },\r\n    // {\r\n    //     question: 'Según me dijiste hace dos semanas, en este lugar hay una mesa en un rincón sin silas porque quedó reservada para nosotros',\r\n    //     answer: ['kilkenny', 'the kilkenny', 'kilkeny', 'the kilkeny'],\r\n    //     hasMap: false\r\n    // },\r\n    // {\r\n    //     question: 'Fue el primer lugar en donde tenemos una fotos juntos nosotros dos. Son dos palabras que vas a tener que mezclar para encontrar el lugar.',\r\n    //     answer: ['respuesta'],\r\n    //     hasMap: true\r\n    // },\r\n    // {\r\n    //     question: 'Ya pasó más tiempo, ya estábamos de novios. Ya teníamos ganas de empezar a escaparnos.',\r\n    //     answer: ['logic games'],\r\n    //     hasMap: true\r\n    // },\r\n    // {\r\n    //     question: 'Me hiciste conocer este lugar y me encantó.',\r\n    //     answer: ['carlitos', 'lo de carlitos'],\r\n    //     hasMap: true\r\n    // },\r\n    // {\r\n    //     question: 'La ciudad en la que tuvimos nuestro primer picnic',\r\n    //     answer: ['tandil'],\r\n    //     hasMap: false\r\n    // }\r\n];\r\n\r\nexport default questionList;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Typography, TextField, withStyles } from '@material-ui/core';\r\nimport { Map, EventSeat } from '@material-ui/icons';\r\n\r\nconst styles = theme => {\r\n    return {\r\n        highlight: {\r\n            color: theme.palette.primary.main\r\n        },\r\n        textField: {\r\n            width: '75%',\r\n            marginTop: theme.spacing.unit\r\n        }\r\n    }\r\n}\r\n\r\nclass Question extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            answerValue: ''\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let answer = e.target.value;\r\n        this.setState({ answerValue: answer });\r\n        this.checkQuestion(answer);\r\n    }\r\n\r\n    checkQuestion = (answer) => {\r\n        if (this.props.question.answer.includes(answer.toLowerCase())) {\r\n            this.setState({ answerValue: '' });\r\n            this.props.onCorrectAnswer();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let question = this.props.question;\r\n\r\n        if (!question)\r\n            return (\r\n                <div>\r\n                    <Typography variant='h6' paragraph>\r\n                        ¡Felicitaciones!<br />Completaste la búsqueda de todas las llaves\r\n                    </Typography>\r\n                    <Typography variant='h6' paragraph>\r\n                        ¡Tocá la llave de arriba a la izquierda para abrir el cofre y encontrar el premio!\r\n                    </Typography>\r\n                </div>\r\n            );\r\n\r\n        return (\r\n            <div>\r\n                <Typography variant='h6' className={this.props.classes.highlight}>\r\n                    {question.hasMap && <Map />}\r\n                    {!question.hasMap && <EventSeat />}\r\n                </Typography>\r\n                <Typography variant='h6'>\r\n                    {question.question}\r\n                </Typography>\r\n                <TextField\r\n                    className={this.props.classes.textField}\r\n                    onChange={this.handleChange}\r\n                    value={this.state.answerValue}\r\n                    label='Respuesta' />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nQuestion.propTypes = {\r\n    question: PropTypes.object.isRequired,\r\n    onCorrectAnswer: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Question);\r\n","import React, { Component } from 'react'\r\nimport VpnKey from '@material-ui/icons/VpnKey'\r\nimport { Button, withStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst styles = theme => {\r\n    return {\r\n        text: {\r\n            marginLeft: theme.spacing.unit\r\n        }\r\n    };\r\n}\r\n\r\nclass KeyCounter extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={this.props.className}>\r\n                <Button onClick={this.props.onClick}>\r\n                    <VpnKey />\r\n                    <span className={classes.text}>\r\n                        {this.props.keys} / {this.props.totalKeys}\r\n                    </span>\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nKeyCounter.propTypes = {\r\n    keys: PropTypes.number.isRequired,\r\n    totalKeys: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(KeyCounter);","import React, { Component } from 'react'\r\nimport { LinearProgress, Typography, withStyles } from '@material-ui/core';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport './chestAnimation.css'\r\nimport VpnKey from '@material-ui/icons/VpnKey'\r\nimport KeyCounter from './KeyCounter';\r\nimport { blueGrey } from '@material-ui/core/colors';\r\n\r\nconst styles = theme => {\r\n    return {\r\n        arrowBack: {\r\n            textAlign: 'left',\r\n            marginBottom: theme.spacing.unit * 2,\r\n            cursor: 'pointer',\r\n            color: 'white',\r\n            marginTop: '5px'\r\n        },\r\n        chestContainer: {\r\n            display: 'inline-flex',\r\n            width: '75%',\r\n            marginBottom: theme.spacing.unit * 2,\r\n            textAlign: 'center',\r\n            backgroundColor: 'red'\r\n        },\r\n        chest: {\r\n            width: 'auto',\r\n            maxHeight: '300px',\r\n        },\r\n        progressContainer: {\r\n            width: '75%',\r\n            margin: `0px auto ${theme.spacing.unit}px auto`\r\n        },\r\n        progress: {\r\n            backgroundColor: blueGrey[700],\r\n        },\r\n        keys: {\r\n            display: 'inline-flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        keyIcon: {\r\n            color: 'white',\r\n            height: '20px'\r\n        },\r\n        text: {\r\n            width: '75%',\r\n            textAlign: 'center',\r\n            margin: 'auto'\r\n        }\r\n    }\r\n}\r\n\r\nclass Chest extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            progress: 0,\r\n            chestAnimation: '',\r\n            chestZoomOut: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.setState({ progress: this.props.keys * 100 / this.props.totalKeys });\r\n        }, 100);\r\n    }\r\n\r\n    onChestClick = () => {\r\n        if (this.props.keys === this.props.totalKeys) {\r\n\r\n        }\r\n        else {\r\n            this.setState({ chestAnimation: 'chestAnimation' });\r\n        }\r\n    }\r\n\r\n    onChestAnimationEnd = () => {\r\n        this.setState({ chestAnimation: '' });\r\n    }\r\n\r\n    render() {\r\n        let { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <div className={classes.arrowBack}>\r\n                    <ArrowBack onClick={this.props.onClose} />\r\n                </div>\r\n                <img\r\n                    src='chest.png' alt='Cofre del tesoro'\r\n                    className={`${classes.chest} ${this.state.chestAnimation} ${this.state.chestOpenAnimation}`}\r\n                    onClick={this.onChestClick}\r\n                    onAnimationEnd={this.onChestAnimationEnd} />\r\n\r\n                <Typography variant='body1' paragraph className={classes.text}>\r\n                    Este el es cofre del tesoro<br />Para abrirlo necesitás {this.props.totalKeys} llaves&nbsp;\r\n                    {this.props.keys === this.props.totalKeys && <>¡y ya las tenés todas! ¡Tocá el cofre para abrirlo!</>}\r\n                    {(this.props.keys < this.props.totalKeys && this.props.keys !== 0) && <>pero solo tenés {this.props.keys}<br />Seguí contestando preguntas para avanzar :)</>}\r\n                    {this.props.keys === 0 && <>pero no tenés ninguna<br />Empezá a contestar preguntas para conseguirlas.</>}\r\n                </Typography>\r\n                {/* <div className={classes.progressContainer}>\r\n                    <LinearProgress\r\n                        className={classes.progress}\r\n                        variant='determinate'\r\n                        value={this.state.progress} />\r\n                </div>\r\n                <KeyCounter\r\n                    className={this.props.classes.keyCounter}\r\n                    keys={this.props.keys}\r\n                    totalKeys={this.props.totalKeys}\r\n                    onClick={() => this.setState({ showChest: true })} /> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Chest);\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport questionList from '../questionList';\r\nimport Question from './Question';\r\nimport KeyCounter from './KeyCounter';\r\nimport { withStyles, Slide } from '@material-ui/core';\r\nimport Chest from './Chest'\r\n\r\nconst styles = theme => {\r\n    return {\r\n        keyCounter: {\r\n            textAlign: 'left',\r\n            marginBottom: theme.spacing.unit * 2\r\n        },\r\n        slideContainer: {\r\n            left: '0px',\r\n            top: '0px',\r\n            position: 'absolute',\r\n            padding: '16px',\r\n            width: '100%',\r\n            backgroundColor: theme.palette.background.default\r\n        }\r\n    }\r\n}\r\n\r\nclass QuestionsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let questionNumber = parseInt(localStorage.getItem('questionNumber'));\r\n        if (!questionNumber) {\r\n            questionNumber = 0;\r\n            localStorage.setItem('questionNumber', questionNumber);\r\n        }\r\n\r\n        this.state = {\r\n            questionNumber: questionNumber\r\n        };\r\n    }\r\n\r\n    handleCorrectAnswer = () => {\r\n        let newQuestionNumber = parseInt(this.state.questionNumber) + 1;\r\n\r\n        if (newQuestionNumber === questionList.length) {\r\n            this.setState({ showChest: true });\r\n        }\r\n\r\n        localStorage.setItem('questionNumber', newQuestionNumber);\r\n        this.setState({ questionNumber: newQuestionNumber });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <KeyCounter\r\n                    className={this.props.classes.keyCounter}\r\n                    keys={this.state.questionNumber}\r\n                    totalKeys={questionList.length}\r\n                    onClick={() => this.setState({ showChest: true })} />\r\n                <Question\r\n                    question={questionList[this.state.questionNumber]}\r\n                    onCorrectAnswer={this.handleCorrectAnswer} />\r\n\r\n                <Slide direction='up' in={this.state.showChest} mountOnEnter unmountOnExit>\r\n                    <div className={this.props.classes.slideContainer}>\r\n                        <Chest\r\n                            keys={this.state.questionNumber}\r\n                            totalKeys={questionList.length}\r\n                            onClose={() => this.setState({ showChest: false })} />\r\n                    </div>\r\n                </Slide>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nQuestionsContainer.propTypes = {\r\n    onCorrectAnswer: PropTypes.func\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(QuestionsContainer));\r\n","import React, { Component } from 'react'\r\n\r\nexport default class AnswersContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        answers\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Typography, Button } from '@material-ui/core';\r\n\r\nexport default class Finish extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography variant='h3'>¡GANASTE!</Typography>\r\n        <Button color='primary'>Ver ubicación del tesoro</Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport { MuiThemeProvider, createMuiTheme, CssBaseline } from '@material-ui/core';\r\nimport { green, indigo, blueGrey, grey, lightGreen } from '@material-ui/core/colors';\r\nimport { Switch, Route } from 'react-router'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Intro from './components/Intro';\r\nimport QuestionsContainer from './components/QuestionsContainer';\r\nimport AnswersContainer from './components/AnswersContainer';\r\nimport Finish from './components/Finish';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n        primary: { main: lightGreen[300] },\r\n        secondary: { main: indigo.A100 },\r\n        background: { default: blueGrey[900] },\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n        allVariants: { color: 'white' }\r\n    }\r\n});\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <CssBaseline />\r\n                <div className=\"App\">\r\n                    <HashRouter>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Intro} />\r\n                            <Route exact path=\"/questions\" render={() => {\r\n                                return <QuestionsContainer\r\n                                    onCorrectAnswer={this.handleCorrectAnswer} />\r\n                            }} />\r\n                            <Route exact path=\"/answers\" component={AnswersContainer} />\r\n                            <Route exact path=\"/finish\" component={Finish} />\r\n                        </Switch>\r\n                    </HashRouter>\r\n                </div>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}